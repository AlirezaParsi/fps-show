name: Manual Build Android APK

on:
  workflow_dispatch:  # فقط دستی از Actions tab اجرا می‌شه
    inputs:
      branch:
        description: 'Branch to build'
        required: true
        default: 'main'  # برنچ پیش‌فرض
      upload_to_release:
        description: 'Upload to GitHub Release? (true/false)'
        required: true
        default: 'false'  # آپلود پیش‌فرض غیرفعاله

jobs:
  build:
    runs-on: ubuntu-latest  # runner لینوکس

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch }}  # بیلد از برنچ انتخاب‌شده

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        sdk-tools-version: 'commandlinetools-linux-11076708_latest'

    - name: Accept Android licenses
      run: yes | sdkmanager --licenses

    - name: Install NDK
      run: |
        sdkmanager "ndk;25.1.8937393"  # نسخه NDK که تو local.properties استفاده می‌کردی (یا 26.1.10909125)

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build APK with Gradle
      run: ./gradlew assembleDebug  # بیلد debug APK (برای release، assembleRelease بذار)

    - name: Upload APK as artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-${{ github.event.inputs.branch }}.apk  # نام artifact با نام برنچ
        path: app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30

    - name: Create and Upload to GitHub Release (if enabled)
      if: ${{ github.event.inputs.upload_to_release == 'true' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG_NAME="v$(date +%Y%m%d)-${{ github.event.inputs.branch }}"
        gh release create $TAG_NAME --title "Release $TAG_NAME" --notes "Manual build from branch ${{ github.event.inputs.branch }}" app/build/outputs/apk/debug/app-debug.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
